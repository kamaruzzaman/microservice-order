plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'application'
	id 'fi.evident.beanstalk' version '0.2.3'
}

group = 'org.mkzaman.microservice'
version = '1.0.0'
sourceCompatibility = '11'

applicationDefaultJvmArgs = ["-Djdk.tls.client.protocols=TLSv1.2"]

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	implementation 'org.zalando:problem-spring-web:0.26.2'
	compile 'org.apache.commons:commons-lang3:3.11'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

beanstalk {
	profile = 'default' // Profile from the .aws/credentials file
	s3Endpoint = "s3-eu-central-1.amazonaws.com"
	beanstalkEndpoint = "elasticbeanstalk.eu-central-1.amazonaws.com"

	deployments {
		production {
			file = tasks.bootJar
			application = "${project.name}"
			environment = "${project.name}-prod"
		}
		upload {
			file = tasks.bootJar
			application = "${project.name}"
		}
	}
}

test {
	useJUnitPlatform()
}
